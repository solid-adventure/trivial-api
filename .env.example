SWAGGER_DRY_RUN=0
POSTGRES_USER='postgres'
POSTGRES_PASSWORD='root'
POSTGRES_DATABASE='trivial_development'
POSTGRES_host='localhost'

# Sets URL for front-end
TRIVIAL_UI_URL="http://127.0.0.1:3000"

# AWS settings
AWS_ROLE_PREFIX='_YourInitials_'

# These can also be set using aws-cli instead 
# AWS_REGION=us-east-2
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=

# For details on creating long lived, unscoped API keys, see:
# https://trivial-js.org/guides/client-api-keys.html
# CLIENT_SECRET=
# CLIENT_KEYS=

# Email configuration for URL generation:
DEFAULT_URL_HOST=127.0.0.1
DEFAULT_URL_PORT=3001

LAMBDA_POLICY_ARN="arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
JWT_PRIVATE_KEY="
 -- see readme for instructions --
"

# Optional Settings:
#
# Controls where Lambdas are deployed:
# DEFAULT_LOAD_BALANCER='staging-lb'
# BASE_URL='https://staging.trivialapps.io'
#
# Redis URL for notifying front end of webhook arrivals:
# REDIS_URL='redis://localhost:6379/1'
#
# Mailgun configuration variables
MAILGUN_HANDLE="noreply"
MAILGUN_DOMAIN="mg.customdomain.io"
# MAILGUN_SMTP_LOGIN=
# MAILGUN_SMTP_PASSWORD=
# MAILGUN_SMTP_PORT=
# MAILGUN_SMTP_SERVER=


# The service ActivityEntry Send and Re-Send will use
# DEFAULT_APP_RUNNER_SERVICE=webhook # Default is 'webhook', 'Kafka' is also supported

# Required if DEFAULT_APP_RUNNER_SERVICE is set to kafka
# KAFKA_USERNAME=
# KAFKA_PASSWORD=
# KAFKA_BOOTSTRAP_SERVERS=
# KAFKA_TOPIC=
# KAFKA_NAMESPACE= # Optional, will be prependended to topic




