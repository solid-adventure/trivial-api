name: Production/Sandbox Deploy

on:
  push:
    branches:
      - main
      - release/bb


jobs:
  generate_image_tag:
    name: Generate Docker Image Tag
    uses: whiplashmerch/workflows/.github/workflows/generate_docker_image_tag.yml@main
    with:
      ecr_registry: ${{ vars.ECR_REGISTRY }}
      ecr_repo: ${{ vars.TRIVIAL_API_ECR_REPO }}
      env: "production"

  build:
    name: "Build & Push Docker Image"
    needs: [generate_image_tag]
    uses: whiplashmerch/workflows/.github/workflows/build-rails-image-v2.yml@main
    with:
      ecr_registry: ${{ vars.ECR_REGISTRY }}
      ecr_repo: ${{ vars.TRIVIAL_API_ECR_REPO }}
      service_key: ${{ vars.TRIVIAL_API_SERVICE_KEY }}
      service_name: ${{ vars.TRIVIAL_API_SERVICE_NAME }}
      ecr_tags: ${{ needs.generate_image_tag.outputs.image_tag }}
    secrets:
      gh_pat: ${{ secrets.PROJECT_WORKFLOWS_TOKEN }}
      BUNDLE_GITHUB__COM: ${{ secrets.BUNDLE_GITHUB__COM }}
      BUNDLE_ENTERPRISE__CONTRIBSYS__COM: ${{ secrets.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}

  tag:
    needs: [build]
    name: "Add RC Git Tags"
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ needs.generate_image_tag.outputs.git_tag }}


  deploy_sandbox:
    name: "Deploy to Sandbox"
    needs: [generate_image_tag, build]
    uses: whiplashmerch/workflows/.github/workflows/run-terraform-v2.yml@main
    with:
      ecr_tag: ${{ needs.generate_image_tag.outputs.image_tag }}
      tf_target: "sandbox"
      repo_target: "terraform/service"
      tf_action: "apply"
      gh_environment_name: sandbox
    secrets: inherit

  deploy_production:
    name: "Deploy to Production"
    needs: [generate_image_tag, build, deploy_sandbox]
    uses: whiplashmerch/workflows/.github/workflows/run-terraform-v2.yml@main
    with:
      ecr_tag: ${{ needs.generate_image_tag.outputs.image_tag }}
      tf_target: "production"
      repo_target: "terraform/service"
      tf_action: "apply"
      gh_environment_name: production
    secrets: inherit