---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/apps/{id}/api_key":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Obtain a new API key
      tags:
      - API Keys
      security:
      - access_token: []
        client: []
        expiry: []
        uid: []
      responses:
        '200':
          description: API key issued
          content:
            application/json:
              example:
                api_key: eyJhbGciOiJSUzI1NiJ9.eyJhcHAiOiI2NjUzYjA1MGE4MTc5MiIsImV4cCI6MTY0Njc4MDI3NX0.QlqChKsyNEupVPkd_FuwEFPOr-PZUT7TgFDm2aD17JfwoNeU00fjhh8lL0FYC8dEKF2tsULhlEcKXgcjk6iqiVfFKlG6C6qo80cn7FxXn6y7sg0n7-M0lG3lUUjpxdrGMAxdKMxBUspk4PI3EiZQF1D870bfOA3ytQKs_J1hbInLvL5KzddWWCb-jdlPxaDzfD14L4Jy2J1wmI3Jbo8tT-X2beT_xM7J1G0jEr2AYbIjarIwh4J9vHkNNixKvlVsAbxrN0WBY0imysUNufev_xEnSZOyG6wZ5XMOkF71SmUXi9igLzdvlVV1uTJ5LtTxmXFgRR_77IozTzMepBcdmg
              schema:
                type: object
                properties:
                  api_key:
                    type: string
    put:
      summary: Refresh an expired API key
      tags:
      - API Keys
      parameters: []
      security:
      - app_api_key: []
      responses:
        '200':
          description: New API key issued and stored in credentials
          content:
            application/json:
              example:
                api_key: eyJhbGciOiJSUzI1NiJ9.eyJhcHAiOiJiZDViOWZlZmQyY2U5YyIsImV4cCI6MTY0Njc4MDI3Nn0.lEsZ9_IfSbXhafcDUkTXsd8xUU-AM5jEMPg6oLNPjZVELY79D_MlJ9rzjg2F-h8TPFpRdA2J2t3CYSKJpiBNqopJYUVjKxBHYpaEhONFj9zz3ETErlODY3tc4gnSwnjhrhkDAu3v_IdgBD_Xoa4W-S762bx58xdcYgsT92EwCWl_I0q1rxXDGffAP8R_v0cGiLmbUXA_0Px-iIIQ4Q3MFwY-NUto9QkfbWzGKQIUF-Qi5I-AyW9UDFZP4uW00Kj3EufI9ZQjIVXNkvK9rm8YZt2OnhLA9URg-fAdBu6_PfaK9aNLHsJqmJ4QhZa-E2wDuOfMcLlX8OkahnYm2ODQ4g
              schema:
                type: object
                properties:
                  api_key:
                    type: string
        '401':
          description: Authentication failed
        '409':
          description: API key does not match key stored in credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
              example:
                path: '1.1'
  "/apps":
    get:
      summary: List the current user's applications
      tags:
      - Apps
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      responses:
        '200':
          description: App listing
          content:
            application/json:
              example:
              - id: 441
                user_id: 1622
                name: 10b2fc5b7a360f
                port: 3001
                created_at: '2022-03-01T22:57:57.630Z'
                updated_at: '2022-03-01T22:57:57.630Z'
                discarded_at:
                hostname: 10b2fc5b7a360f
                domain: staging.trivialapps.io
                load_balancer: staging-lb
                descriptive_name: 'Test App #5'
                aws_role: testlambda-ex-1
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    hostname:
                      type: string
                    domain:
                      type: string
                    load_balancer:
                      type: string
                    descriptive_name:
                      type: string
                    aws_role:
                      type: string
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
                  - hostname
                  - domain
                  - load_balancer
                  - descriptive_name
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
    post:
      summary: Create a new application
      tags:
      - Apps
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      parameters: []
      responses:
        '200':
          description: App created
          content:
            application/json:
              example:
                id: 444
                user_id: 1624
                name: 2b92797e776885
                port: 3002
                created_at: '2022-03-01T22:57:58.260Z'
                updated_at: '2022-03-01T22:57:58.260Z'
                discarded_at:
                hostname: 2b92797e776885
                domain: staging.trivialapps.io
                load_balancer: staging-lb
                descriptive_name: A Test
                aws_role: testlambda-ex-1
              schema:
                type:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    hostname:
                      type: string
                    domain:
                      type: string
                    load_balancer:
                      type: string
                    descriptive_name:
                      type: string
                    aws_role:
                      type: string
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
                  - hostname
                  - domain
                  - load_balancer
                  - descriptive_name
        '422':
          description: Missing or invalid field
          content:
            application/json:
              example:
                errors:
                - Descriptive name can't be blank
                - Descriptive name is too short (minimum is 3 characters)
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descriptive_name:
                  type: string
              required:
              - descriptive_name
              example:
                descriptive_name: A Test
  "/apps/{appId}":
    get:
      summary: Retrieve details for the app with the given id (name field)
      tags:
      - Apps
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: App details
          content:
            application/json:
              example:
                id: 447
                user_id: 1627
                name: d959930c5b1758
                port: 3001
                created_at: '2022-03-01T22:57:59.118Z'
                updated_at: '2022-03-01T22:57:59.118Z'
                discarded_at:
                hostname: d959930c5b1758
                domain: staging.trivialapps.io
                load_balancer: staging-lb
                descriptive_name: 'Test App #10'
                aws_role: testlambda-ex-1
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  hostname:
                    type: string
                  domain:
                    type: string
                  load_balancer:
                    type: string
                  descriptive_name:
                    type: string
                  aws_role:
                    type: string
                required:
                - id
                - name
                - created_at
                - updated_at
                - hostname
                - domain
                - load_balancer
                - descriptive_name
        '404':
          description: No app found for the current user with that id
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
    put:
      summary: Update the app
      tags:
      - Apps
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: App updated
          content:
            application/json:
              example:
                user_id: 1630
                id: 450
                descriptive_name: A New Name
                name: e26a257ea874f7
                port: 3001
                hostname: e26a257ea874f7
                domain: staging.trivialapps.io
                load_balancer: staging-lb
                created_at: '2022-03-01T22:58:00.029Z'
                updated_at: '2022-03-01T22:58:00.052Z'
                discarded_at:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  hostname:
                    type: string
                  domain:
                    type: string
                  load_balancer:
                    type: string
                  descriptive_name:
                    type: string
                  aws_role:
                    type: string
                required:
                - id
                - name
                - created_at
                - updated_at
                - hostname
                - domain
                - load_balancer
                - descriptive_name
        '404':
          description: No app found for the current user with that id
        '422':
          description: Missing or invalid field
          content:
            application/json:
              example:
                errors:
                - Descriptive name can't be blank
                - Descriptive name is too short (minimum is 3 characters)
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descriptive_name:
                  type: string
              example:
                descriptive_name: A New Name
    delete:
      summary: Delete the app
      tags:
      - Apps
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: App deleted
        '404':
          description: No app found for the current user with that id
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
  "/apps/name_suggestion":
    get:
      summary: Retrieve a suggested descriptive name for a new app
      tags:
      - Apps
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      responses:
        '200':
          description: New name suggestion
          content:
            application/json:
              example:
                suggestion: Monumental Unity
              schema:
                type: object
                properties:
                  suggestion:
                    type: string
                required:
                - suggestion
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
  "/auth":
    post:
      summary: Register a user
      tags:
      - Auth
      parameters: []
      responses:
        '200':
          description: user created
          content:
            application/json:
              example:
                status: success
                data:
                  id: 1639
                  provider: email
                  uid: jane.doe@example.test
                  name: Jane Doe
                  email: jane.doe@example.test
                  created_at: '2022-03-01T22:58:02.867Z'
                  updated_at: '2022-03-01T22:58:02.871Z'
                  role: member
                  approval: approved
                  color_theme:
                  allow_password_change: false
                  aws_role:
        '422':
          description: unprocessable entity - email taken; name, email, password blank
            or too short!
          content:
            application/json:
              example:
                status: error
                data:
                  id:
                  provider: email
                  uid: ''
                  name: Jane Doe
                  email: jane.doe@example.test
                  created_at:
                  updated_at:
                  role: member
                  approval: pending
                  color_theme:
                  allow_password_change: false
                  aws_role:
                errors:
                  password:
                  - can't be blank
                  full_messages:
                  - Password can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
              required:
              - email
              - password
              - name
              example:
                email: jane.doe@example.test
                password: supersecret
                name: Jane Doe
  "/auth/sign_in":
    post:
      summary: Sign in a user
      tags:
      - Auth
      parameters: []
      responses:
        '200':
          description: user logged in
          content:
            application/json:
              example:
                data:
                  id: 1640
                  aws_role: testlambda-ex-1
                  email: user22@example.test
                  provider: email
                  name: Test User
                  uid: user22@example.test
                  role: member
                  approval: approved
                  color_theme:
                  allow_password_change: false
        '401':
          description: unauthorized - email or password is wrong
          content:
            application/json:
              example:
                success: false
                errors:
                - Invalid login credentials. Please try again.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
              example:
                email: user22@example.test
                password: insecure
  "/auth/sign_out":
    delete:
      summary: Sign out a user
      tags:
      - Auth
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      responses:
        '200':
          description: user signed out
          content:
            application/json:
              example:
                success: true
        '404':
          description: unauthorized - invalid login credentials in the header
          content:
            application/json:
              example:
                success: false
                errors:
                - User was not found or was not logged in.
  "/credential_sets":
    get:
      summary: Return a list of credential sets for the account
      tags:
      - Credential Sets
      security:
      - access_token: []
        client: []
        expiry: []
        uid: []
      responses:
        '200':
          description: Credential sets returned
          content:
            application/json:
              example:
                credential_sets:
                - id: 46936c83-ff7a-4dce-8e7f-c5527d167857
                  name: Twilio
                  credential_type: TwilioCredentials
                  created_at: '2022-03-01T22:58:05.168Z'
                  updated_at: '2022-03-01T22:58:05.168Z'
              schema:
                type: object
                properties:
                  credential_sets:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        credential_type:
                          type: string
                      required:
                      - id
                      - name
                      - credential_type
                required:
                - credential_sets
    post:
      summary: Create a new credential set
      tags:
      - Credential Sets
      parameters: []
      security:
      - access_token: []
        client: []
        expiry: []
        uid: []
      responses:
        '200':
          description: Credential set created
          content:
            application/json:
              example:
                credential_set:
                  id: 58b097b3-bd97-4bbf-8352-847859099e46
                  name: Mailgun
                  credential_type: MailgunCredentials
                  created_at: '2022-03-01T22:58:05.539Z'
                  updated_at: '2022-03-01T22:58:05.539Z'
              schema:
                type: object
                properties:
                  credential_set:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      credential_type:
                        type: string
                    required:
                    - id
                    - name
                    - credential_type
                required:
                - credential_set
        '422':
          description: Invalid credential set body
          content:
            application/json:
              example:
                errors:
                - Name can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                credential_set:
                  type: object
                  properties:
                    name:
                      type: string
                    credential_type:
                      type: string
                  required:
                  - name
                  - credential_type
                credentials:
                  type: object
              required:
              - credential_set
              example:
                credential_set:
                  name: Mailgun
                  credential_type: MailgunCredentials
                credentials:
                  api_key: "+7Ucdca1LUQ="
                  domain: example.test
  "/credential_sets/{set_id}":
    parameters:
    - name: set_id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Access the credential data for a set
      tags:
      - Credential Sets
      security:
      - access_token: []
        client: []
        expiry: []
        uid: []
      responses:
        '200':
          description: Credential data returned for set
          content:
            application/json:
              example:
                credential_set:
                  id: 833950e1-a8f7-4224-ad0c-072b779efe7e
                  name: Twilio
                  credential_type: TwilioCredentials
                  created_at: '2022-03-01T22:58:06.290Z'
                  updated_at: '2022-03-01T22:58:06.290Z'
                credentials:
                  account_sid: fa8f7fa53659d6de
                  auth_token: Whe8Y5poyQo=
              schema:
                type: object
                properties:
                  credential_set:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      credential_type:
                        type: string
                    required:
                    - id
                    - name
                    - credential_type
                  credentials:
                    type: object
                required:
                - credential_set
                - credentials
        '404':
          description: Incorrect id
    put:
      summary: Update the credential set and/or its credential data
      tags:
      - Credential Sets
      parameters: []
      security:
      - access_token: []
        client: []
        expiry: []
        uid: []
      responses:
        '200':
          description: Credentials updated
          content:
            application/json:
              example:
                credential_set:
                  id: 9c8a9111-e65d-427e-ae52-755bc866aa15
                  name: New Name
                  credential_type: TwilioCredentials
                  created_at: '2022-03-01T22:58:06.938Z'
                  updated_at: '2022-03-01T22:58:06.951Z'
              schema:
                type: object
                properties:
                  credential_set:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      credential_type:
                        type: string
                    required:
                    - id
                    - name
                    - credential_type
                required:
                - credential_set
        '422':
          description: Invalid credential set body
          content:
            application/json:
              example:
                errors:
                - Name can't be blank
        '404':
          description: Incorrect id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                credential_set:
                  type: object
                  properties:
                    name:
                      type: string
                    credential_type:
                      type: string
                  required:
                  - name
                  - credential_type
                credentials:
                  type: object
              example:
                credential_set:
                  name: New Name
                  credential_type: TwilioCredentials
                credentials:
                  account_sid: fa8f7fa53659d6de
                  auth_token: Whe8Y5poyQo=
    patch:
      summary: Update a single value within the credential data for a set
      tags:
      - Credential Sets
      parameters: []
      security:
      - app_api_key: []
      responses:
        '200':
          description: Credentials updated
          content:
            application/json:
              example:
                ok: true
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                required:
                - ok
        '422':
          description: Invalid path or current value
          content:
            application/json:
              example:
                ok: false
                error: Incorrect value or path
        '404':
          description: Incorrect id
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              example:
                errors:
                - Unauthorized!
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: array
                  items: string
                credentials:
                  type: object
                  properties:
                    current_value:
                      type: string
                    new_value:
                      type: string
                  required:
                  - current_value
                  - new_value
              required:
              - path
              - credentials
              example:
                path:
                - code_grant
                - access_token
                credentials:
                  current_value: Whe8Y5poyQo=
                  new_value: zTeYlkd9yzo=
    delete:
      summary: Delete the credential set and its credential data
      tags:
      - Credential Sets
      security:
      - access_token: []
        client: []
        expiry: []
        uid: []
      responses:
        '200':
          description: Credentials deleted
        '404':
          description: Incorrect id
  "/credential_sets/{set_id}/api_key":
    parameters:
    - name: set_id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Refresh an expired API key
      tags:
      - Credential Sets
      parameters: []
      security:
      - app_api_key: []
      responses:
        '200':
          description: New API key issued and stored in credentials
          content:
            application/json:
              example:
                api_key: eyJhbGciOiJSUzI1NiJ9.eyJhcHAiOiIwNzYwYTEzZjQ1MzY3YiIsImV4cCI6MTY0Njc4MDI5MH0.oBfVlKBlihPcaGtEuFGChFuQMQZZoBHSCREW4EtLzaP6hT1Iy6oY3dHrCrMDGv5mRjZRyJrdcNdziWtVwz4NwfhvDvqG0keY8RX4Lgf7adH3pHzFV6gR8Q3TabyFStq0vKAvI5-coTnqNZxQMNX7oofqUI2lK-52zcfW_Qh-XEMmVCrdc-o6VS4yA3x-VIAJc0wzXHjUHzOaTXggG5AfhEyJ51-pomCfT7RaZbdWjZ_y6k4ihgnld2lX-l7T92Rvg2LQa6lJWR_E6Q5QZwHM8fiWKcl-YmpR4p2GWXHWaonPLnan-_l3aNgv3l8fCr2ksyj8PJmD-OU5dHaohiWwAQ
              schema:
                type: object
                properties:
                  api_key:
                    type: string
                  required:
                  - api_key
        '401':
          description: Authentication failed
        '409':
          description: API key does not match key stored in credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
              example:
                path: api_key
  "/apps/{id}/credentials":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Refresh an expired API key
      tags:
      - App Credentials
      parameters: []
      security:
      - app_api_key: []
      responses:
        '200':
          description: Single credential value updated
          content:
            application/json:
              example:
                ok: true
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
        '401':
          description: Authentication failed
          content:
            application/json:
              example:
                errors:
                - Unauthorized!
        '400':
          description: Invalid path or incorrect stored value
          content:
            application/json:
              example:
                ok: false
                error: Incorrect value or path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: array
                  items:
                    type: string
                credentials:
                  type: object
                  properties:
                    current_value:
                      type: string
                    new_value:
                      type: string
              example:
                path:
                - '1'
                - '1'
                - access_token
                credentials:
                  current_value: secret
                  new_value: new secret
  "/profile":
    get:
      summary: Show the logged in user's profile
      tags:
      - Profile
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      responses:
        '200':
          description: Current profile
          content:
            application/json:
              example:
                user:
                  id: 1663
                  name: Test User
                  email: user45@example.test
                  role: admin
                  approval: pending
                  color_theme:
                  created_at: '2022-03-01T22:58:12.168Z'
        '401':
          description: Not authorized
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
    put:
      summary: Update the logged in user's profile
      tags:
      - Profile
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      parameters: []
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              example:
                user:
                  id: 1665
                  name: My New Name
                  email: user47@example.test
                  role: admin
                  approval: pending
                  color_theme: Light
                  created_at: '2022-03-01T22:58:12.726Z'
        '400':
          description: Bad request
          content:
            application/json:
              example:
                errors:
                - Name can't be blank
                - Name is too short (minimum is 3 characters)
        '401':
          description: Not authorized
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                color_theme:
                  type: string
              example:
                name: My New Name
                color_theme: Light
  "/users":
    get:
      summary: Show the list of the users
      tags:
      - User
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      responses:
        '200':
          description: users listed
          content:
            application/json:
              example:
                users:
                - id: 1668
                  name: Test User
                  email: user50@example.test
                  role: admin
                  approval: pending
                  color_theme:
                  created_at: '2022-03-01T22:58:13.545Z'
        '401':
          description: unauthorized or not an admin user
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
    post:
      summary: Create a user
      tags:
      - User
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      parameters: []
      responses:
        '201':
          description: user created
          content:
            application/json:
              example:
                user:
                  id: 1671
                  name: Jane Doe
                  email: jane.doe@example.test
                  role: member
                  approval: approved
                  color_theme:
                  created_at: '2022-03-01T22:58:14.360Z'
        '400':
          description: bad request
          content:
            application/json:
              example:
                errors:
                - Email can't be blank
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                approval:
                  type: string
              required:
              - email
              - password
              - name
              example:
                name: Jane Doe
                email: jane.doe@example.test
                password: supersecret
                role: member
                approval: approved
  "/users/{userId}":
    get:
      summary: Show the user with userId
      tags:
      - User
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: show user
          content:
            application/json:
              example:
                user:
                  id: 1674
                  name: Test User
                  email: user55@example.test
                  role: member
                  approval: approved
                  color_theme:
                  created_at: '2022-03-01T22:58:15.463Z'
        '404':
          description: No user found with that id
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
    put:
      summary: Update the User with userId
      tags:
      - User
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: user updated
          content:
            application/json:
              example:
                user:
                  id: 1679
                  name: New Name
                  email: user60@example.test
                  role: member
                  approval: approved
                  color_theme:
                  created_at: '2022-03-01T22:58:16.807Z'
        '400':
          description: bad request
          content:
            application/json:
              example:
                errors:
                - Name can't be blank
                - Name is too short (minimum is 3 characters)
        '404':
          description: No user found with that id
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                approval:
                  type: string
              example:
                name: New Name
    delete:
      summary: Destroy the team with userId
      tags:
      - User
      security:
      - access_token: []
        client: []
        uid: []
        token_type: []
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: user deleted
        '404':
          description: No user found with that id
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                errors:
                - You need to sign in or sign up before continuing.
servers:
- url: "{defaultHost}"
  variables:
    defaultHost:
      default: https://trivial-api-staging.herokuapp.com/
components:
  securitySchemes:
    access_token:
      type: apiKey
      name: access-token
      in: header
    client:
      type: apiKey
      name: client
      in: header
    expiry:
      type: apiKey
      name: expiry
      in: header
    uid:
      type: apiKey
      name: uid
      in: header
    app_api_key:
      type: http
      scheme: bearer
      bearerFormat: JWT
